<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Enzo 恩佐的數據職涯</title>
        <link>https://enzochang.com/</link>
        <description>Data &amp; Agile</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>enzoapu@gmail.com (Enzo Chang)</managingEditor>
            <webMaster>enzoapu@gmail.com (Enzo Chang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 30 Jan 2023 19:36:23 &#43;0800</lastBuildDate>
            <atom:link href="https://enzochang.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>[COURSE] RISE - 設計 E2E 數據架構 學程心得</title>
    <link>https://enzochang.com/e2e-data-architecture-bootcamp/</link>
    <pubDate>Mon, 30 Jan 2023 19:36:23 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/e2e-data-architecture-bootcamp/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/ac-rise.png" referrerpolicy="no-referrer">
            </div>2022年底，我報名了 ALPHA Camp 推出的「設計 E2E 現代數據架構」學程（業界首見👀），六週的內容超出預期的豐富，認識了許多 Data 領域的超強導師和優秀同儕，用力地學習、死命地交流，獲得的知識、經驗、人脈和資源，實在很超值！這篇文章將透過回顧和反思來記錄這些時間的想法與收穫。]]></description>
</item><item>
    <title>[CAREER] 為什麼你應該投稿成為社群/研討會講者？</title>
    <link>https://enzochang.com/why-you-should-be-a-conference-speaker/</link>
    <pubDate>Sun, 10 Apr 2022 19:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/why-you-should-be-a-conference-speaker/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/conference-speaker.jpg" referrerpolicy="no-referrer">
            </div>最近在和幾位同事討(推)論(坑)要不要投稿今年的 PyCon APAC，發現大家普遍都缺乏動機（不知道為何要投）或是有點畏懼（沒自信能當講者），不過在我看來，投稿和當講者都是一件 C/P 值很高的事！本篇文章將介紹當講者的好處、一些重要的心態，以及任何人都可以展開行動的方法～]]></description>
</item><item>
    <title>[DATA] 訊息佇列 04 - RabbitMQ x Python 程式實作範例</title>
    <link>https://enzochang.com/rabbitmq-python-example/</link>
    <pubDate>Tue, 22 Mar 2022 22:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/rabbitmq-python-example/</guid>
    <description><![CDATA[上一篇文章我們已經把 RabbitMQ Server 的環境架設起來，並在網頁管理介面上體驗建立 Queue 和 Publish / Get 訊息，系列文的最後一篇終於要來寫 code 了，我們將使用 Python 的 Library - Pika 與 RabbitMQ 進行互動，撰寫 Client 端的 Producer 和 Consumer 程式碼。]]></description>
</item><item>
    <title>[DATA] 訊息佇列 03 - RabbitMQ 架設方法與網頁管理介面</title>
    <link>https://enzochang.com/rabbitmq-management-interface/</link>
    <pubDate>Tue, 15 Mar 2022 22:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/rabbitmq-management-interface/</guid>
    <description><![CDATA[上一篇介紹完 RabbitMQ 的架構和設計模式，接下來就要告訴大家如何自己搭建 RabbitMQ Server，不用幾行指令就可以在本機或是虛擬主機把服務架起來，還提供了一個 Web 管理介面方便你瀏覽和操作。]]></description>
</item><item>
    <title>[DATA] 訊息佇列 02 - RabbitMQ 簡介與 5 種設計模式</title>
    <link>https://enzochang.com/rabbitmq-introduction/</link>
    <pubDate>Sun, 06 Mar 2022 21:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/rabbitmq-introduction/</guid>
    <description><![CDATA[上一篇文章介紹完 Message Queue 是什麼後，這次要介紹的是知名且易用的實作工具 RabbitMQ，本篇文章將帶大家認識 RabbitMQ 的架構以及 5 種設計模式。]]></description>
</item><item>
    <title>[DATA] 訊息佇列 01 - Message Queue 介紹與實際應用</title>
    <link>https://enzochang.com/message-queue-introduction/</link>
    <pubDate>Thu, 03 Mar 2022 20:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/message-queue-introduction/</guid>
    <description><![CDATA[這陣子團隊在開發相似商品搜尋的 ML Product，為了要把系統架構解耦，改為異步分散式處理，因而接觸到訊息佇列(Message Queue)，作為兩個子系統（商品資料爬蟲 & 圖片/文字向量轉換）的通信中間層。我將透過四篇文章分享我在使用 RabbitMQ 與 Python 實作的學習。]]></description>
</item><item>
    <title>[DevOps] CI/CD 介紹 - 基礎概念與導入準備</title>
    <link>https://enzochang.com/cicd-introduction/</link>
    <pubDate>Sun, 13 Feb 2022 20:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://enzochang.com/cicd-introduction/</guid>
    <description><![CDATA[自從去年初啟動“敏捷”(Scrum)導入，幾乎都在適應(迭代)各種流程、方法和工具，工程實踐方面的單元測試和 CI/CD 推行計畫卻一直往後延。如今，因應團隊一個大型系統要進行前後端分離重構，加上大家對於容器化技術越來越熟悉，同時又有優秀的新夥伴加入，可謂是天時地利人和啊，我們終於要啟動 CI/CD 導入！]]></description>
</item></channel>
</rss>
